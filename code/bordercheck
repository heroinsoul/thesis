#!/usr/bin/lua

-- Function to check if file exists
--
function fileExists(name)
   local f=io.open(name,"r")
   if f~=nil then io.close(f) return true else return false end
end

function sleep(n)
        os.execute("sleep " .. tonumber(n))
end

-- Function: string:trim
--
-- Trim whitespace around a string
function string:trim()
    return self:find'^%s*$' and '' or self:match'^%s*(.*%S)'
end

-- Function: readFile
--
-- Reads the entire contents of a file.
--
-- Params:
-- * filePath - The path to the file to read.
--
-- Returns:
-- * fileContents - The contents of the file

function readFile(filePath)
    local file = io.open(filePath, "rb")
    local content = nil

    if file then
        content = file:read("*a")
        file:close()

        if content then
            content = content:trim()
        end
    end

    return content
end

-- Function: executeCommand
--
-- Executes a shell command returning the status code
-- and stdout.
--
-- Params:
-- * command - The command to execute.
-- * captureStdout - Whether or not to capture stdout.
--
-- Returns:
-- * exitCode - The exit code of the command.
-- * stdout - The standard output of the command (if captureStdout = true).

function executeCommand(command, captureStdout)
    if captureStdout == nil then
        captureStdout = true
    end

    if captureStdout then
        local stdoutFilePath = os.tmpname()

        local exitCode = os.execute(string.format("%s > %s", command, stdoutFilePath))
        local stdout = readFile(stdoutFilePath)
        os.remove(stdoutFilePath)

        return exitCode, stdout
    else
        return os.execute(string.format("%s",command))
    end
end



-- Rounds a given number to nearest integer
function round(num) return math.floor(num+.5) end


--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------


-- Get node's own degree
--
function myDegree()
        local _, degree = executeCommand(string.format("uci get wibed.temp.degree"))
        return tonumber(degree)
end

-- Get average signal strength of node's neighbors
--
function avgSig()
        local _, avgsig = executeCommand(string.format("uci get wibed.temp.avgsig"))
        return tonumber(avgsig)
end

-- Get node's weight that is degree merged with avg signal
--
function myWeight()
        local _, weight = executeCommand(string.format("uci get wibed.temp.weight"))
        return tonumber(weight)
end

-- Get nodes own MAC address
--
function getNodesMac()
        local _, mymac = executeCommand(string.format("cat /sys/class/net/br-mgmt/address"))
        mymac = string.upper(mymac)
        return mymac
end


function recvAlfMsg(ch, mac)
        local msghandle = io.popen("alfred -r "..ch)
        local msg = msghandle:read("*a")
        local mymac = getNodesMac()
        msghandle:close()
        if msg then
                msg = string.gsub( msg, "%s+$", "" ) -- remove any white space at the end
                if ch==81 then
                        for line in msg:gmatch("[^\r\n]+") do -- split msg into lines
                                if string.match(line,mac) then
                                        local twords = {}
                                        for word in string.gmatch(line, "%S+") do -- find words separated by space
                                                table.insert(twords,word)
                                        end
                                        return twords[5],twords[6], twords[7]
                                end
                        end


                elseif ch==87 then
                        for line in msg:gmatch("[^\r\n]+") do
                                if string.match(line,mac) then
                                        local twords = {}
                                        for word in string.gmatch(line, "%S+") do
                                                table.insert(twords,word)
                                        end
                                        local ext=string.gsub(twords[6],","," ")
                                        local extarray = {}
                                        for i in string.gmatch(ext,"%w+") do
                                                table.insert(extarray,i)
                                        end
                                        if twords[5]~="NONE" then
                                                local list=string.gsub(twords[5],","," ")
                                                local listarray = {}
                                                for ch in string.gmatch(list,"%w+") do
                                                        table.insert(listarray,ch)
                                                end
                                                return listarray,extarray
                                        else

                                                return twords[5],extarray
                                        end
                                end
                        end
                elseif ch==91 then
                        for line in msg:gmatch("[^\r\n]+") do
                                if string.match(line,mac) then
                                        local twords={}
                                        for word in string.gmatch(line, "%S+") do
                                                table.insert(twords,word)
                                        end
                                        return twords[5]
                                end
                        end
                elseif ch==96 then
                        for line in msg:gmatch("[^\r\n]+") do
                                if string.match(line,mac) then
                                        local twords={}
                                        local array={}
                                        for word in string.gmatch(line, "%S+") do
                                                table.insert(twords,word)
                                        end
                                        cllist = string.gsub(twords[5],","," ")
                                        for word in string.gmatch(cllist, "%S+") do
                                                table.insert(array,word)
                                        end
                                        return array
                                end
                        end

                elseif ch==98 then
                        for line in msg:gmatch("[^\r\n]+") do
                                if string.match(line,mac) then
                                        return true
                                end
                        end

                elseif ch==99 then
                        for line in msg:gmatch("[^\r\n]+") do
                                if string.match(line,mac) then
                                        return true
                                end
                        end
                elseif ch==100 then
                        for line in msg:gmatch("[^\r\n]+") do
                                if string.match(line,mac) then
                                        return true
                                end
                        end

                else
                        for line in msg:gmatch("[^\r\n]+") do -- split msg into lines
                                if string.match(line,mac) then
                                        local twords = {}
                                        for word in string.gmatch(line, "%S+") do
                                                table.insert(twords,word)
                                        end
                                        if twords[6]==mymac then
                                                if twords[5]=="ACCEPTED" then
                                                        os.execute(string.format("uci set wibed.temp.clid='%s';uci commit",twords[7]))
                                                        return "1"
                                                elseif twords[5]=="REJECTED" then
                                                        return "0"
                                                end
                                        end
                                end
                        end
                end
        end

end

function select24Nodes()
        local _,alone=executeCommand("uci get wibed.temp.alone")
        if alone=="0" then
                print("STARTED CHECKING 2.4 NEIGHBORS' CLUSTERS")
                -- Generate a list of 2.4 neighbors
                --
                os.execute("iwinfo mgmt0 scan | grep 'wibed ' -A2 | awk '{if ($0 ~ /wibed/) pat1=$3; if ($0 ~ /Signal:/) pat2=$2}{if (pat1 || pat2) print pat1, pat2; pat=pat2=\"\"}' | awk 'NF==2{print}{}' | sed -e 's/\"//' -e 's/-//' | awk '$2<100' > /root/2.4neighbors")

                -- Ask all 2.4 neighbors their cluster IDs
                --
                local _,list = executeCommand("awk '{print $1}' /root/2.4neighbors")
                os.execute(string.format("echo '%s' | alfred -s 90",list))

                -- Collect replies and put them into file
                --
                local fi=io.open("/root/2.4neighbors","r")
                local fo=io.open("/root/2.4clusters","w")
                while true do
                        line = fi:read()
                        local twords = {}
                        if line == nil then break end
                        for word in string.gmatch(line, "%S+") do
                                table.insert(twords,word)
                        end
                        while true do
                                local clid = recvAlfMsg(91,twords[1])
                                local _,myclid=executeCommand("uci get wibed.temp.clid")
                                if clid~=nil then
                                        if clid~=myclid then
                                                fo:write(twords[1]," ",clid," ",twords[2],"\n")
                                                break
                                        else
                                                break
                                        end
                                else
                                        sleep(5)
                                end
                        end
                end
                fi:close()
                fo:close()
                os.execute("echo done | alfred -s 90")
                -- Sort the list created so that only best connections to all clusters are left
                --
                os.execute("cat 2.4clusters | sort --key=2,2 --key=3,3 | sort --unique --stable --key=2,2 > /root/tempf; mv /root/tempf /root/2.4clusters")

                local _,clhead = executeCommand("uci get wibed.temp.clhead")
                if clhead=="0" then
                        local mac = getNodesMac()
                        local _,cllist = executeCommand("awk '{print $2\":\"$3}' /root/2.4clusters")
                        cllist = string.gsub(cllist,"\n",",")
                        os.execute(string.format("echo ' %s %s ' | alfred -s 96",mac,cllist))
                        print("DONE")
                        print("----------------------------------------------------")
                        while true do
                                local _,msg = executeCommand("alfred -r 84")
                                local _,myclid = executeCommand("uci get wibed.temp.clid")
                                local mac = getNodesMac()
                                if msg and string.match(msg,myclid) then
                                        for line in msg:gmatch("[^\r\n]+") do
                                                if string.match(line,mac) then
                                                        print("RECEIVED COMMAND TO LEAVE 2.4 RADIO ACTIVE")
                                                        print(" ")
                                                        print("ASKING MY PARTNERS FROM OTHER CLUSTERS TO KEEP 2.4 RADIO ACTIVE")
                                                        local _,partners = executeCommand("awk '{print $1}' /root/2.4clusters")
                                                        os.execute(string.format("echo ' %s ' | alfred -s 85",partners))
                                                        for line in partners:gmatch("[^\r\n]+") do
                                                                local twords = {}
                                                                for word in string.gmatch(line, "%S+") do
                                                                        table.insert(twords,word)
                                                                end
                                                                while true do
                                                                        if recvAlfMsg(98,twords[1]) then
                                                                                print("RECEIVED ACK FROM:",twords[1])
                                                                                break
                                                                        else
                                                                                sleep(5)
                                                                        end
                                                                end
                                                        end
                                                        print("GOT ACKS FROM ALL PARTNERS")
                                                        print(" ")
                                                        print("SENDING DONE MSG TO CLUSTER HEAD")
                                                        os.execute(string.format("echo ' %s DONE ' | alfred -s 99",mac))
                                                else
                                                        print("RECEIVED COMMAND TO DISABLE 2.4 RADIO")
                                                end
                                        end
                                        break
                                else
                                        sleep(10)
                                end
                        end



                else
                        local f1=io.open("/root/2.4clusters","r")
                        local fo=io.open("/root/2.4listfull","a+")
                        while true do
                                line = f1:read()
                                if line == nil then break end
                                local twords = {}
                                local mac = getNodesMac()
                                for word in string.gmatch(line, "%S+") do
                                        table.insert(twords,word)
                                end
                                fo:write(mac," ",twords[2]," ",twords[3],"\n")
                        end
                        f1:close()

                        -- Request and collect same information from cluster members
                        --
                        local f2=io.open("/root/clmembers","r")
                        local _,m = executeCommand("awk '{print $1}' /root/clmembers")
                        os.execute(string.format("echo '%s' | alfred -s 95",m))
                        while true do
                                line = f2:read()
                                if line == nil then break end
                                local twords = {}
                                for word in string.gmatch(line, "%S+") do
                                        table.insert(twords,word)
                                end
                                while true do
                                        local nlist = recvAlfMsg(96,twords[1])
                                        if nlist~=nil then
                                                for _,v in pairs(nlist) do
                                                        v = string.gsub(v,":"," ")
                                                        fo:write(twords[1]," ",v,"\n")
                                                end
                                                break
                                        else
                                                sleep(5)
                                        end
                                end
                        end
                        f2:close()
                        fo:close()
                        os.execute("echo done | alfred -s 95")

                        -- Analyze the produced list and sort it based 
                        -- on the signal level and cluster ID
                        --
                        os.execute("cat /root/2.4listfull | sort --key=2,2 --key=3,3 | sort --unique --stable --key=2,2 | sort --unique --key 1,1 > /root/2.4final")
                        -- Nodes that are left with 2.4 radio
                        --
                        local _,nodes = executeCommand("awk '{print $1}' /root/2.4final | sort -u")
                        -- Rest of the nodes in a cluster
                        --
                        local _,rest = executeCommand("awk 'FNR==NR{a[$1]++}FNR!=NR && !a[$1]{print}' /root/2.4final /root/clmembers")
                        local mymac = getNodesMac()
                        print("--------------------------------------------------------")
                        print("NODES THAT WILL DISABLE THEIR 2.4 RADIO:")
                        if string.match(nodes,mymac) then
                                print(rest)
                        else
                                print(rest,"\n",mymac)
                        end

                        print(" ")
                        print("NODES THAT WILL LEAVE 2.4 RADIO ENABLED:")
                        print(nodes)
                        print(" ")

                        -- Ask selected nodes to notify their "partners" of 2.4 link
                        print("ASKING SELECTED NODES TO NOTIFY THEIR PARTNERS OF 2.4 LINK")
                        local _,myclid = executeCommand("uci get wibed.temp.clid")
                        os.execute(string.format("echo ' %s %s ' | alfred -s 84",myclid,nodes))

                        -- Check if I myself have to keep 2.4 radio active
                        -- if so - notify my partners
                        if string.match(nodes,mymac) then
                                print(" ")
                                print("ASKING MY PARTNERS FROM OTHER CLUSTERS TO KEEP 2.4 RADIO ACTIVE")
                                local _,partners = executeCommand("awk '{print $1}' /root/2.4clusters")
                                os.execute(string.format("echo ' %s ' | alfred -s 85",partners))
                                for line in partners:gmatch("[^\r\n]+") do
                                        local twords = {}
                                        for word in string.gmatch(line, "%S+") do
                                                table.insert(twords,word)
                                        end
                                        while true do
                                                if recvAlfMsg(98,twords[1]) then
                                                        print("RECEIVED ACK FROM:",twords[1])
                                                        break
                                                else
                                                        sleep(5)
                                                end
                                        end
                                end
                                print("GOT ACKS FROM ALL PARTNERS")
                                print(" ")
                                os.execute(string.format("echo ' %s DONE ' | alfred -s 99",mymac))
                        end


                        -- Collect replies from the nodes

                        for line in nodes:gmatch("[^\r\n]+") do
                                local gwords = {}
                                for word in string.gmatch(line, "%S+") do
                                        table.insert(gwords,word)
                                end
                                while true do
                                        if recvAlfMsg(99,gwords[1]) then
                                                print("RECEIVED DONE FROM NODE:",gwords[1])
                                                break
                                        else
                                                sleep(5)
                                        end
                                end
                        end
			os.execute("echo done | alfred -s 101")
			sleep(10)

                        -- Send command to disconnect 2.4 radio or leave it connected
                        -- to cluster members
                        --
                        os.execute(string.format("echo ' %s %s ' | alfred -s 97",myclid,nodes))

                end

        end
end


---------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------

-- Border nodes check their connection to border nodes in other clusters and if at least
-- one connection is not available anymore we trigger border nodes selection process 
-- within a cluster. Other nodes in a cluster monitor internet connection. If packet loss
-- is 100% we trigger the border nodes selection process as well.
--

function borderCheck()
        local _,radio = executeCommand("uci get wireless.radio0.disabled")
        local _,alone = executeCommand("uci get wibed.temp.alone")
	local _,status = executeCommand("uci get wibed.temp.border_node")
	local _,clid = executeCommand("uci get wibed.temp.clid")
	local _,alone = executeCommand("uci get wibed.temp.alone")
	if status=="1" then
		-- Generate an updated list of 2.4 neighbors
                --
                os.execute("iwinfo mgmt0 scan | grep 'wibed ' -A2 | awk '{if ($0 ~ /wibed/) pat1=$3; if ($0 ~ /Signal:/) pat2=$2}{if (pat1 || pat2) print pat1, pat2; pat=pat2=\"\"}' | awk 'NF==2{print}{}' | sed -e 's/\"//' -e 's/-//' | awk '$2<100' > /root/2.4neighbors")
		-- Check how many of original partners are still there
		--
		local _,cntupd = executeCommand("awk 'FNR==NR{a[$1]++}FNR!=NR && a[$1]{print}' /root/2.4clusters /root/2.4neighbors | wc -l")
		-- Count how many there were initially
		--
		local _,cnt = executeCommand("sort -u -k1,1 2.4clusters | wc -l")
		-- Compare both obtained values
		--
		if tonumber(cnt)~=tonumber(cntupd) then
			os.execute(string.format("echo ' %s ' | alfred -s 101",clid))
		end
	end
	if alone~="1" and clid~="0" then 
		-- Perform an internet check
		--
		local _,ping = executeCommand("ping 8.8.8.8 -c 10 | grep 'packet loss' | awk '{print $6}'")
		ping = string.gsub(ping,'%W','')
		if tonumber(ping)==100 then
			os.execute(string.format("echo ' %s ' | alfred -s 101",clid))
		end
	end 
end


-- Nodes that have disabled their 2.4 radio check if there is a command to enable it
-- and start border nodes selection process again

function avgNodesCheck()
        local _,radio = executeCommand("uci get wireless.radio0.disabled")
        local _,clid = executeCommand("uci get wibed.temp.clid")
        local _,msg = executeCommand("alfred -r 101")
        if msg and string.match(msg,clid) then
                if radio=="1" then
                        os.execute("uci wireless.radio0.disabled='0'; uci commit; /etc/init.d/network reload")
			sleep(10)
			os.execute("batctl if add mgmt0")
                end
                sleep(5)
                select24Nodes()
        end
end



function main()
        os.execute("lock -w /tmp/pa-lock; lock /tmp/pa-lock")
	borderCheck()
        avgNodesCheck()
        os.execute("lock -u /tmp/pa-lock")
end

main()

